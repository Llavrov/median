{"version":3,"sources":["components/cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","React","useState","mean","setMean","mode","setMode","stdDeviation","setStdDeviation","median","setMedian","numbers","setNumbers","link","setLink","axios","get","then","date","data","concat","reduce","sum","curr","length","toFixed","sort","a","b","Math","floor","Number","modeList","MaxCounts","map","item","Object","entries","modeFunction","pow","getList","className","id","onClick","cursor","document","getElementById","enterBtn","focus","value","style","color","toCursor","type","array","isNaN","newNumberToList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sOA6GeA,MAzGf,WAoDI,MAAwBC,IAAMC,WAA9B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBH,IAAMC,SAAS,GAAvC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwCL,IAAMC,SAAS,GAAvD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA4BP,IAAMC,SAAS,GAA3C,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA8BT,IAAMC,SAAS,IAA7C,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAwBX,IAAMC,SAAS,mDAAvC,mBAAOW,EAAP,KAAaC,EAAb,KAIA,OA5DA,WAAgC,IAAfH,EAAc,uDAAJ,GACvBI,IAAMC,IAAIH,GAAMI,MAAK,YAAa,IAC1BC,EADyB,EAAVC,KACHA,KAChBD,EAAOA,EAAKE,OAAOT,GAGnBP,GAASc,EAAKG,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAAKL,EAAKM,QAAQC,QAAQ,IAG1EP,EAAKQ,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAIC,KACvBV,EAAKM,OAAS,GAAK,EAAId,EAAWQ,EAAKW,KAAKC,MAAMZ,EAAKM,OAAS,IAAKC,QAAQ,IACzEf,IAAYQ,EAAKW,KAAKC,MAAMZ,EAAKM,OAAS,IAAMN,EAAKW,KAAKC,MAAMZ,EAAKM,OAAS,GAAK,IAAM,GAAGC,QAAQ,IAexGnB,EAAQyB,OAZR,WACI,IAAIC,EAAW,GACXC,EAAY,EAAE,GAAI,KAQtB,OAPAf,EAAKgB,KAAI,SAAAC,GAAI,OAAIA,KAAQH,EAAWA,EAASG,KAAUH,EAASG,GAAQ,KACxEC,OAAOC,QAAQL,GAAUE,KAAI,SAAAC,GACrBA,EAAK,GAAKF,EAAU,KACpBA,EAAU,GAAKE,EAAK,GACpBF,EAAU,GAAKE,EAAK,OAGrBF,EAAU,GAENK,IAAgBb,QAAQ,IAGvCjB,EAAiBqB,KAAKU,IAAIrB,EAAKG,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMO,KAAKU,IAAIhB,EAAOpB,EAAM,KAAG,GAAKe,EAAKM,OAAQ,IAAMC,QAAQ,OA6B5He,CAAQ7B,GAGJ,sBAAK8B,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sCACA,6BAAKtC,OAET,sBAAKsC,UAAU,cAAf,UACI,wCACA,6BAAKhC,OAET,sBAAKgC,UAAU,oBAAf,UACI,+CAEA,6BAAKlC,OAET,sBAAKkC,UAAU,YAAf,UACI,sCACA,6BAAKpC,UAGb,sBAAKoC,UAAU,kBAAf,UACI,oBAAIC,GAAG,YAAYC,QAAS,kBAjDxC,WACI,IAAIC,EAASC,SAASC,eAAe,SACjCC,EAAWF,SAASC,eAAe,aAEvCF,EAAOI,QACPJ,EAAOK,MAAQ,GACfF,EAASG,MAAMC,MAAQ,QA2CmBC,IAAlC,4BACA,uBAAOV,GAAG,QAAQW,KAAK,SACvB,qBAAKZ,UAAU,aAAaE,QAAS,kBAzCjD,WACI,IAAIC,EAASC,SAASC,eAAe,SACjCX,EAAOJ,OAAOa,EAAOK,OACzBL,EAAOK,MAAQ,GACf,IAAIK,EAAQC,MAAMpB,GAAQ,GAAK,CAACA,GAChCvB,EAAW,GAAGQ,OAAOT,EAAS2C,IAoCqBE,IAA3C,SAA8D,6CAElE,sBAAKf,UAAU,iBAAf,UACI,qBAAKA,UAAU,OAAOE,QAAS,WAC3B7B,EAAQ,mDACRF,EAAW,KAFf,SAII,yDAEJ,qBAAK6B,UAAU,OAAOE,QAAS,WAC3B7B,EAAQ,mDACRF,EAAW,KAFf,SAII,gECzFL6C,MAVf,WAGE,OACE,qBAAKhB,UAAU,MAAf,SACI,cAAC,EAAD,OCIOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.06d57c73.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/card.css';\nimport axios from \"axios\";\n\nfunction Cards() {\n    function getList(numbers = []) {\n        axios.get(link).then(({data}) => {\n            let date = data.data;\n            date = date.concat(numbers);\n\n            // MEAN\n            setMean((date.reduce((sum, curr) => sum + curr, 0) / date.length).toFixed(6));\n\n            // Median\n            date.sort((a,b) => a - b);\n            date.length % 2 == 1 ? setMedian((date[Math.floor(date.length / 2)]).toFixed(6)) :\n                setMedian(((date[Math.floor(date.length / 2)] + date[Math.floor(date.length / 2) - 1]) / 2).toFixed(6));\n\n            // Mode\n            function modeFunction() {\n                let modeList = {};\n                let MaxCounts = [-1, -100000000];\n                date.map(item => item in modeList ? modeList[item]++ : modeList[item] = 1);\n                Object.entries(modeList).map(item => {\n                    if (item[1] > MaxCounts[1] ) {\n                        MaxCounts[0] = item[0];\n                        MaxCounts[1] = item[1];\n                    }\n                });\n                return MaxCounts[0];\n            }\n            setMode(Number(modeFunction()).toFixed(6));\n\n            // StdDeviation\n            setStdDeviation((Math.pow(date.reduce((sum, curr) => sum + Math.pow(curr - mean, 2),0) / date.length, 0.5)).toFixed(6));\n        });\n    }\n\n    function toCursor() {\n        let cursor = document.getElementById(\"input\");\n        let enterBtn = document.getElementById(\"enter-btn\");\n\n        cursor.focus();\n        cursor.value = \"\";\n        enterBtn.style.color = \"black\";\n        return undefined;\n    }\n\n    function newNumberToList() {\n        let cursor = document.getElementById(\"input\");\n        let item = Number(cursor.value);\n        cursor.value = \"\";\n        let array = isNaN(item) ? [] : [item];\n        setNumbers([].concat(numbers, array))\n        return undefined;\n    }\n    const [mean, setMean] = React.useState();\n    const [mode, setMode] = React.useState(0);\n    const [stdDeviation, setStdDeviation] = React.useState(0);\n    const [median, setMedian] = React.useState(0);\n    const [numbers, setNumbers] = React.useState([]);\n    const [link, setLink] = React.useState(\"https://llavrov.github.io/median/data-1234.json\");\n\n    getList(numbers);\n\n    return (\n        <div className=\"Container\">\n            <div className=\"Cards-component\">\n                <div className=\"card Mean\">\n                    <h1>Mean</h1>\n                    <h1>{mean}</h1>\n                </div>\n                <div className=\"card Median\">\n                    <h1>Median</h1>\n                    <h1>{median}</h1>\n                </div>\n                <div className=\"card StdDeviation\">\n                    <h1>Std Deviation</h1>\n\n                    <h1>{stdDeviation}</h1>\n                </div>\n                <div className=\"card Mode\">\n                    <h1>Mode</h1>\n                    <h1>{mode}</h1>\n                </div>\n            </div>\n            <div className=\"input-container\">\n                <h1 id=\"enter-btn\" onClick={() => toCursor()}>Enter a number</h1>\n                <input id=\"input\" type=\"text\"></input>\n                <div className=\"btn-submit\" onClick={() => newNumberToList()}><h3>Submit</h3></div>\n            </div>\n            <div className=\"Link-container\">\n                <div className=\"link\" onClick={() => {\n                    setLink(\"https://llavrov.github.io/median/data-1234.json\");\n                    setNumbers([]);\n                }}>\n                    <h3>Reload 1234-JSON Data</h3>\n                </div>\n                <div className=\"link\" onClick={() => {\n                    setLink(\"https://llavrov.github.io/median/data-4321.json\");\n                    setNumbers([]);\n                }}>\n                    <h3>Reload 4321-JSON Data</h3>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Cards;\n","import Cards from \"./components/cards\";\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n        <Cards></Cards>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}